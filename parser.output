Terminals unused in grammar

   ELSE
   LBRACE
   RBRACE
   LOWEST
   ASSIGN
   OR
   AND
   NOT


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | /* empty */

    4 declaration: variable_declaration
    5            | assignment
    6            | condition

    7 variable_declaration: type IDENTIFIER SEMICOLON

    8 assignment: IDENTIFIER EQUAL expression SEMICOLON

    9 condition: IF LPAREN expression RPAREN statement

   10 statement: '{' statements '}'
   11          | variable_declaration
   12          | assignment
   13          | condition

   14 statements: statement statements
   15           | /* empty */

   16 expression: IDENTIFIER
   17           | INT_LITERAL
   18           | FLOAT_LITERAL
   19           | CHAR_LITERAL
   20           | expression PLUS expression
   21           | expression MINUS expression
   22           | expression MULTIPLY expression
   23           | expression DIVIDE expression
   24           | expression GREATER expression
   25           | expression LESS expression
   26           | expression GREATER_EQUAL expression
   27           | expression LESS_EQUAL expression
   28           | '-' expression
   29           | expression EQ expression
   30           | '(' expression ')'

   31 type: INT
   32     | FLOAT
   33     | CHAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 30
')' (41) 30
'-' (45) 28
'{' (123) 10
'}' (125) 10
error (256)
IDENTIFIER (258) 7 8 16
INT (259) 31
FLOAT (260) 32
CHAR (261) 33
INT_LITERAL (262) 17
FLOAT_LITERAL (263) 18
CHAR_LITERAL (264) 19
SEMICOLON (265) 7 8
EQUAL (266) 8
PLUS (267) 20
MINUS (268) 21
MULTIPLY (269) 22
DIVIDE (270) 23
IF (271) 9
ELSE (272)
LPAREN (273) 9
RPAREN (274) 9
GREATER (275) 24
LESS (276) 25
GREATER_EQUAL (277) 26
LESS_EQUAL (278) 27
LBRACE (279)
RBRACE (280)
EQ (281) 29
LOWEST (282)
ASSIGN (283)
OR (284)
AND (285)
NOT (286)
UMINUS (287)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
declarations (40)
    on left: 2 3, on right: 1 2
declaration (41)
    on left: 4 5 6, on right: 2
variable_declaration (42)
    on left: 7, on right: 4 11
assignment (43)
    on left: 8, on right: 5 12
condition (44)
    on left: 9, on right: 6 13
statement (45)
    on left: 10 11 12 13, on right: 9 14
statements (46)
    on left: 14 15, on right: 10 14
expression (47)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    8 9 20 21 22 23 24 25 26 27 28 29 30
type (48)
    on left: 31 32 33, on right: 7


State 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    IF          shift, and go to state 5

    $default  reduce using rule 3 (declarations)

    program               go to state 6
    declarations          go to state 7
    declaration           go to state 8
    variable_declaration  go to state 9
    assignment            go to state 10
    condition             go to state 11
    type                  go to state 12


State 1

    8 assignment: IDENTIFIER . EQUAL expression SEMICOLON

    EQUAL  shift, and go to state 13


State 2

   31 type: INT .

    $default  reduce using rule 31 (type)


State 3

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 4

   33 type: CHAR .

    $default  reduce using rule 33 (type)


State 5

    9 condition: IF . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 14


State 6

    0 $accept: program . $end

    $end  shift, and go to state 15


State 7

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 8

    2 declarations: declaration . declarations

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    IF          shift, and go to state 5

    $default  reduce using rule 3 (declarations)

    declarations          go to state 16
    declaration           go to state 8
    variable_declaration  go to state 9
    assignment            go to state 10
    condition             go to state 11
    type                  go to state 12


State 9

    4 declaration: variable_declaration .

    $default  reduce using rule 4 (declaration)


State 10

    5 declaration: assignment .

    $default  reduce using rule 5 (declaration)


State 11

    6 declaration: condition .

    $default  reduce using rule 6 (declaration)


State 12

    7 variable_declaration: type . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 17


State 13

    8 assignment: IDENTIFIER EQUAL . expression SEMICOLON

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 24


State 14

    9 condition: IF LPAREN . expression RPAREN statement

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 25


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 17

    7 variable_declaration: type IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 26


State 18

   16 expression: IDENTIFIER .

    $default  reduce using rule 16 (expression)


State 19

   17 expression: INT_LITERAL .

    $default  reduce using rule 17 (expression)


State 20

   18 expression: FLOAT_LITERAL .

    $default  reduce using rule 18 (expression)


State 21

   19 expression: CHAR_LITERAL .

    $default  reduce using rule 19 (expression)


State 22

   28 expression: '-' . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 27


State 23

   30 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 28


State 24

    8 assignment: IDENTIFIER EQUAL expression . SEMICOLON
   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    SEMICOLON      shift, and go to state 29
    PLUS           shift, and go to state 30
    MINUS          shift, and go to state 31
    MULTIPLY       shift, and go to state 32
    DIVIDE         shift, and go to state 33
    GREATER        shift, and go to state 34
    LESS           shift, and go to state 35
    GREATER_EQUAL  shift, and go to state 36
    LESS_EQUAL     shift, and go to state 37
    EQ             shift, and go to state 38


State 25

    9 condition: IF LPAREN expression . RPAREN statement
   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    PLUS           shift, and go to state 30
    MINUS          shift, and go to state 31
    MULTIPLY       shift, and go to state 32
    DIVIDE         shift, and go to state 33
    RPAREN         shift, and go to state 39
    GREATER        shift, and go to state 34
    LESS           shift, and go to state 35
    GREATER_EQUAL  shift, and go to state 36
    LESS_EQUAL     shift, and go to state 37
    EQ             shift, and go to state 38


State 26

    7 variable_declaration: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 7 (variable_declaration)


State 27

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   28           | '-' expression .
   29           | expression . EQ expression

    $default  reduce using rule 28 (expression)


State 28

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression
   30           | '(' expression . ')'

    PLUS           shift, and go to state 30
    MINUS          shift, and go to state 31
    MULTIPLY       shift, and go to state 32
    DIVIDE         shift, and go to state 33
    GREATER        shift, and go to state 34
    LESS           shift, and go to state 35
    GREATER_EQUAL  shift, and go to state 36
    LESS_EQUAL     shift, and go to state 37
    EQ             shift, and go to state 38
    ')'            shift, and go to state 40


State 29

    8 assignment: IDENTIFIER EQUAL expression SEMICOLON .

    $default  reduce using rule 8 (assignment)


State 30

   20 expression: expression PLUS . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 41


State 31

   21 expression: expression MINUS . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 42


State 32

   22 expression: expression MULTIPLY . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 43


State 33

   23 expression: expression DIVIDE . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 44


State 34

   24 expression: expression GREATER . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 45


State 35

   25 expression: expression LESS . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 46


State 36

   26 expression: expression GREATER_EQUAL . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 47


State 37

   27 expression: expression LESS_EQUAL . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 48


State 38

   29 expression: expression EQ . expression

    IDENTIFIER     shift, and go to state 18
    INT_LITERAL    shift, and go to state 19
    FLOAT_LITERAL  shift, and go to state 20
    CHAR_LITERAL   shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 49


State 39

    9 condition: IF LPAREN expression RPAREN . statement

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    IF          shift, and go to state 5
    '{'         shift, and go to state 50

    variable_declaration  go to state 51
    assignment            go to state 52
    condition             go to state 53
    statement             go to state 54
    type                  go to state 12


State 40

   30 expression: '(' expression ')' .

    $default  reduce using rule 30 (expression)


State 41

   20 expression: expression . PLUS expression
   20           | expression PLUS expression .
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 20 (expression)


State 42

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   21           | expression MINUS expression .
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 21 (expression)


State 43

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   22           | expression MULTIPLY expression .
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    $default  reduce using rule 22 (expression)


State 44

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   23           | expression DIVIDE expression .
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    $default  reduce using rule 23 (expression)


State 45

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   24           | expression GREATER expression .
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 24 (expression)


State 46

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   25           | expression LESS expression .
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 25 (expression)


State 47

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   26           | expression GREATER_EQUAL expression .
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 26 (expression)


State 48

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   27           | expression LESS_EQUAL expression .
   29           | expression . EQ expression

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 27 (expression)


State 49

   20 expression: expression . PLUS expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | expression . GREATER expression
   25           | expression . LESS expression
   26           | expression . GREATER_EQUAL expression
   27           | expression . LESS_EQUAL expression
   29           | expression . EQ expression
   29           | expression EQ expression .

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 29 (expression)


State 50

   10 statement: '{' . statements '}'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    IF          shift, and go to state 5
    '{'         shift, and go to state 50

    $default  reduce using rule 15 (statements)

    variable_declaration  go to state 51
    assignment            go to state 52
    condition             go to state 53
    statement             go to state 55
    statements            go to state 56
    type                  go to state 12


State 51

   11 statement: variable_declaration .

    $default  reduce using rule 11 (statement)


State 52

   12 statement: assignment .

    $default  reduce using rule 12 (statement)


State 53

   13 statement: condition .

    $default  reduce using rule 13 (statement)


State 54

    9 condition: IF LPAREN expression RPAREN statement .

    $default  reduce using rule 9 (condition)


State 55

   14 statements: statement . statements

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    IF          shift, and go to state 5
    '{'         shift, and go to state 50

    $default  reduce using rule 15 (statements)

    variable_declaration  go to state 51
    assignment            go to state 52
    condition             go to state 53
    statement             go to state 55
    statements            go to state 57
    type                  go to state 12


State 56

   10 statement: '{' statements . '}'

    '}'  shift, and go to state 58


State 57

   14 statements: statement statements .

    $default  reduce using rule 14 (statements)


State 58

   10 statement: '{' statements '}' .

    $default  reduce using rule 10 (statement)
